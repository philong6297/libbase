---
# Note on disabled checks:
# -llvm-header-guard : we don't use LLVM style
# -llvm-include-order: we don't use LLVM order
# -bugprone-macro-parentheses: this is tricky one, but any macros in this library is tested
# -fuchsia-*: we don't support Fuchsia OS
# -llvmlibc-*: we don't use LLVM libc
# -altera-*: we don't use Altera SDK
# -hicpp-special-member-functions: we already have cppcoreguidelines-special-member-functions with options
Checks: >
  *,
  -llvm-header-guard,
  -llvm-include-order,
  -bugprone-macro-parentheses,
  -fuchsia-*,
  -llvmlibc-*,
  -altera-*,
  -hicpp-special-member-functions
WarningsAsErrors: ""
HeaderFilterRegex: ""
AnalyzeTemporaryDtors: false
FormatStyle: file
User: Long Ph. Le
CheckOptions:
  # Google Style
  # https://gist.github.com/airglow923/1fa3bda42f2b193920d7f46ee8345e04
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.ClassMemberCase
    value: lower_case
  - key: readability-identifier-naming.ConstexprVariableCase
    value: CamelCase
  - key: readability-identifier-naming.ConstexprVariablePrefix
    value: k
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantPrefix
    value: k
  - key: readability-identifier-naming.FunctionCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalConstantCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalConstantPrefix
    value: k
  - key: readability-identifier-naming.StaticConstantCase
    value: CamelCase
  - key: readability-identifier-naming.StaticConstantPrefix
    value: k
  - key: readability-identifier-naming.StaticVariableCase
    value: lower_case
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
  - key: readability-identifier-naming.MacroDefinitionIgnoredRegexp
    value: "^[A-Z]+(_[A-Z]+)*_$"
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _
  - key: readability-identifier-naming.PublicMemberSuffix
    value: ""
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.TypeAliasCase
    value: CamelCase
  - key: readability-identifier-naming.TypedefCase
    value: CamelCase
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.IgnoreMainLikeFunctions
    value: 1
  # Other options
  - key: google-readability-braces-around-statements.ShortStatementLines
    value: "1"
  - key: google-readability-function-size.StatementThreshold
    value: "800"
  - key: google-readability-namespace-comments.ShortNamespaceLines
    value: "10"
  - key: google-readability-namespace-comments.SpacesBeforeComments
    value: "2"
  - key: modernize-loop-convert.MaxCopySize
    value: "16"
  - key: modernize-loop-convert.MinConfidence
    value: reasonable
  - key: modernize-loop-convert.NamingStyle
    value: CamelCase
  - key: modernize-pass-by-value.IncludeStyle
    value: llvm
  - key: modernize-replace-auto-ptr.IncludeStyle
    value: llvm
  - key: modernize-use-nullptr.NullMacros
    value: "NULL"
  - key: cppcoreguidelines-macro-usage.AllowedRegexp
    value: "^LONGLP_*"
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: true
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctionsWhenCopyIsDeleted
    value: true
  - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: true
  - key: misc-non-private-member-variables-in-classes.IgnorePublicMemberVariables
    value: true
  - key: readability-identifier-length.IgnoredVariableNames
    value: to
  - key: readability-identifier-length.IgnoredParameterNames
    value: to
